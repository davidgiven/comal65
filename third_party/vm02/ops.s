FNEG:	TSX
	LDA	$0104,X
	EOR	#$80
	STA	$0104,X
	JMP	INCNEXTOP
FSUB:	LDA	#$80		; TOGGLE SIGN
	BNE	:+
FADD:	LDA	#$00
:	STA	FP2SGN
	PLA
	STA	FP2MAN0
	PLA
	STA	FP2MAN1
	PLA
	CMP	#$80		; SET CARRY FROM MSB
	ORA	#$80		; SET HIDDEN BIT
	STA	FP2MAN2
	PLA
	EOR	FP2SGN		; TOGGLE SIGN FOR FSUB
	ROL
	STA	FP2EXP
	LDA	#$00
	STA	FPSGN
	BCC	:+
	SBC	FP2MAN0
	STA	FP2MAN0
	LDA	#$00
	SBC	FP2MAN1
	STA	FP2MAN1
	LDA	#$00
	SBC	FP2MAN2
	STA	FP2MAN2
	LDA	#$FF
:	STA	FP2MAN3
	PLA
	STA	FP1MAN0
	PLA
	STA	FP1MAN1
	PLA
	CMP	#$80		; SET CARRY FROM MSB
	ORA	#$80		; SET HIDDEN BIT
	STA	FP1MAN2
	PLA
	ROL
	STA	FP1EXP
	LDA	#$00
	BCC	:+
	SBC	FP1MAN0
	STA	FP1MAN0
	LDA	#$00
	SBC	FP1MAN1
	STA	FP1MAN1
	LDA	#$00
	SBC	FP1MAN2
	STA	FP1MAN2
	LDA	#$FF
:	STA	FP1MAN3
	LDA	FP1EXP		; CALCULATE WHICH MANTISSA TO SHIFT
	STA	FPEXP
	SEC
	SBC	FP2EXP
	BEQ	FADDMAN
	BCS	:+
	EOR	#$FF
	TAY
	INY
	LDA	FP2EXP
	STA	FPEXP
	LDA	FP1MAN3
	CPY	#24		; KEEP SHIFT RANGE VALID
	BCC	FP1SHFT
	LDA	#$00
	STA	FP1MAN3
	STA	FP1MAN2
	STA	FP1MAN1
	STA	FP1MAN0
	BEQ	FADDMAN
FP1SHFT:	CMP	#$80		; SHIFT FP1 DOWN
	ROR
	ROR	FP1MAN2
	ROR	FP1MAN1
	ROR	FP1MAN0
	DEY
	BNE	FP1SHFT
	STA	FP1MAN3
	JMP	FADDMAN
:	TAY
	LDA	FP2MAN3
	CPY	#24		; KEEP SHIFT RANGE VALID
	BCC	FP2SHFT
	LDA	#$00
	STA	FP2MAN3
	STA	FP2MAN2
	STA	FP2MAN1
	STA	FP2MAN0
	BEQ	FADDMAN
FP2SHFT:	CMP	#$80		; SHIFT FP2 DOWN
	ROR
	ROR	FP2MAN2
	ROR	FP2MAN1
	ROR	FP2MAN0
	DEY
	BNE	FP2SHFT
	STA	FP2MAN3
FADDMAN:	LDA	FP1MAN0
	CLC
	ADC	FP2MAN0
	STA	FPMAN0
	LDA	FP1MAN1
	ADC	FP2MAN1
	STA	FPMAN1
	LDA	FP1MAN2
	ADC	FP2MAN2
	STA	FPMAN2
	LDA	FP1MAN3
	ADC	FP2MAN3
	STA	FPMAN3
	BPL	FPNORM
	LDA	#$80
	STA	FPSGN
	LDA	#$00
	SBC	FPMAN0
	STA	FPMAN0
	LDA	#$00
	SBC	FPMAN1
	STA	FPMAN1
	LDA	#$00
	SBC	FPMAN2
	STA	FPMAN2
	LDA	#$00
	SBC	FPMAN3
	STA	FPMAN3
FPNORM:	BEQ	FPNORMLEFT		; NORMALIZE FP, A = FPMANT3
FPNORMRIGHT:	INC	FPEXP
	LSR
	STA	FPMAN3
	ROR	FPMAN2
	ROR	FPMAN1
	LDA	FPMAN0
	ROR
	ADC	#$00
	STA	FPMAN0
	LDA	FPMAN1
	ADC	#$00
	STA	FPMAN1
	LDA	FPMAN2
	ADC	#$00
	STA	FPMAN2
	LDA	FPMAN3
	ADC	#$00
	BNE	FPNORMRIGHT
	LDA	FPEXP
	ASL	FPMAN2
	LSR
	ORA	FPSGN
	PHA
	LDA	FPMAN2
	ROR
	PHA
	LDA	FPMAN1
	PHA
	LDA	FPMAN0
	PHA
	JMP	INCNEXTOP
FPNORMLEFT:	LDA	FPMAN2
	BNE	FPNORMLEFT1
	LDA	FPMAN1
	BNE	FPNORMLEFT8
	LDA	FPMAN0
	BNE	FPNORMLEFT16
	PHA			; RESULT IS ZERO
	PHA
	PHA
	PHA
	JMP	INCNEXTOP
FPNORMLEFT16:	TAX
	LDA	FPEXP
	SEC
	SBC	#$10
	STA	FPEXP
	LDA	#$00
	STA	FPMAN1
	STA	FPMAN0
	TXA
	BNE	FPNORMLEFT1
FPNORMLEFT8:	TAX
	LDA	FPMAN0
	STA	FPMAN1
	LDA	FPEXP
	SEC
	SBC	#$08
	STA	FPEXP
	LDA	#$00
	STA	FPMAN0
	TXA
FPNORMLEFT1:	BMI	FPNORMDONE
:	DEC	FPEXP
	ASL	FPMAN0
	ROL	FPMAN1
	ROL
	BPL	:-
FPNORMDONE:	ASL
	TAX
	LDA	FPEXP
	LSR
	ORA	FPSGN
	PHA
	TXA
	ROR
	PHA
	LDA	FPMAN1
	PHA
	LDA	FPMAN0
	PHA
	JMP	INCNEXTOP
FMUL:	PLA
	STA	FP2MAN0
	PLA
	STA	FP2MAN1
	PLA
	CMP	#$80		; SET CARRY FROM MSB
	ORA	#$80		; SET HIDDEN BIT
	STA	FP2MAN2
	PLA
	ROL
	STA	FP2EXP
	BNE	:+
	TSX			; MUL BY ZERO, RESULT ZERO
;	LDA	#$00
	STA	$0101,X
	STA	$0102,X
	STA	$0103,X
	STA	$0104,X
	JMP	INCNEXTOP
:	LDA	#$00
	ROR
	STA	FPSGN
	PLA
	STA	FP1MAN0
	PLA
	STA	FP1MAN1
	PLA
	CMP	#$80		; SET CARRY FROM MSB
	ORA	#$80		; SET HIDDEN BIT
	STA	FP1MAN2
	PLA
	ROL
	STA	FP1EXP
	BNE	:+
;	LDA	#$00
	PHA			; MUL BY ZERO, RESULT ZERO
	PHA
	PHA
	PHA
	JMP	INCNEXTOP
:	LDA	#$00
	ROR
	EOR	FPSGN
	STA	FPSGN
	LDA	FP1EXP
	CLC			; ADD EXPONENTS
	ADC	FP2EXP
	SEC			; SUBTRACT BIAS
	SBC	#$7F
	STA	FPEXP
	LDX	#$00
	STX	FPMAN0
	STX	FPMAN1
	STX	FPMAN2
	STX	FPMAN3
	STX	TMP
FMULNEXTBYTE:	LDA	FP1MAN0,X
	BNE	:+
	LDX	FPMAN1		; SHORT CIRCUIT BYTE OF ZERO BITS
	STX	FPMAN0
	LDX	FPMAN2
	STX	FPMAN1
	LDX	FPMAN3
	STX	FPMAN2
	STA	FPMAN3
	INC	TMP
	LDX	TMP
	CPX	#$03
	BNE	FMULNEXTBYTE
	LDA	FPMAN3
	JMP	FPNORM
:	EOR	#$FF
	LDX	#$08
FMULTSTBITS:	LSR	FPMAN3
	ROR	FPMAN2
	ROR	FPMAN1
	ROR	FPMAN0
	LSR
	BCS	FMULNEXTTST
	TAY
	LDA	FP2MAN0
	ADC	FPMAN0
	STA	FPMAN0
	LDA	FP2MAN1
	ADC	FPMAN1
	STA	FPMAN1
	LDA	FP2MAN2
	ADC	FPMAN2
	STA	FPMAN2
	LDA	#$00
	ADC	FPMAN3
	STA	FPMAN3
	TYA
FMULNEXTTST:	DEX
	BNE	FMULTSTBITS
	INC	TMP
	LDX	TMP
	CPX	#$03
	BNE	FMULNEXTBYTE
	LDA	FPMAN3
	JMP	FPNORM
FDIV:	PLA
	STA	FP2MAN0
	PLA
	STA	FP2MAN1
	PLA
	CMP	#$80		; SET CARRY FROM MSB
	ORA	#$80		; SET HIDDEN BIT
	STA	FP2MAN2
	PLA
	ROL
	STA	FP2EXP
	BNE	:+
	LDA	#23		; DIVIDE BY ZERO, ERROR
	JMP	SYSTHROW
:	LDA	#$00
	ROR
	STA	FPSGN
	PLA
	STA	FP1MAN0
	PLA
	STA	FP1MAN1
	PLA
	CMP	#$80		; SET CARRY FROM MSB
	ORA	#$80		; SET HIDDEN BIT
	STA	FP1MAN2
	PLA
	ROL
	STA	FP1EXP
	BNE	:+
;	LDA	#$00
	PHA			; DIVIDE ZERO, RESULT ZERO
	PHA
	PHA
	PHA
	JMP	INCNEXTOP
:	LDA	#$00
	STA	FP1MAN3
	ROR
	EOR	FPSGN
	STA	FPSGN
	LDA	FP1EXP
	SEC			; SUBTRACT EXPONENTS
	SBC	FP2EXP
	CLC
	ADC	#$7F		; ADD BACK BIAS
	STA	FPEXP
	LDX	#24		; #BITS
FDIVLOOP:	LDA	FP1MAN0
	SEC
	SBC	FP2MAN0
	STA	TMP
	LDA	FP1MAN1
	SBC	FP2MAN1
	STA	TMP+1
	LDA	FP1MAN2
	SBC	FP2MAN2
	TAY
	LDA	FP1MAN3
	SBC	#$00
	BCC	FDIVNEXTBIT
	STA	FP1MAN3
	STY	FP1MAN2
	LDA	TMP+1
	STA	FP1MAN1
	LDA	TMP
	STA	FP1MAN0
FDIVNEXTBIT:	ROL	FPMAN0
	ROL	FPMAN1
	ROL	FPMAN2
	ASL	FP1MAN0
	ROL	FP1MAN1
	ROL	FP1MAN2
	ROL	FP1MAN3
	DEX
	BNE	FDIVLOOP
	LDA	#$00
	JMP	FPNORM
FCMPL:
FCMPG:	TSX
	TXA
	TAY
	CLC
	ADC	#$08
	TAX
	TXS
	LDA	$0104,Y		; COMPARE SIGNS
	AND	#$80
	STA	FP2SGN
	LDA	$0108,Y
	AND	#$80
	CMP	FP2SGN
	BCC	FCMPGTSGN
	BEQ	:+
	BCS	FCMPLTSGN
:	LDA	$0108,Y		; COMPARE AS MAGNITUDE
	CMP	$0104,Y
	BCC	FCMPLT
	BEQ	:+
	BCS	FCMPGT
:	LDA	$0107,Y
	CMP	$0103,Y
	BCC	FCMPLT
	BEQ	:+
	BCS	FCMPGT
:	LDA	$0106,Y
	CMP	$0102,Y
	BCC	FCMPLT
	BEQ	:+
	BCS	FCMPGT
:	LDA	$0105,Y
	CMP	$0101,Y
	BCC	FCMPLT
	BEQ	FCMPEQ
	BCS	FCMPGT
FCMPEQ:	PHA			; EQUAL
	PHA
	PHA
	PHA
	JMP	INCNEXTOP
FCMPGT:	LDA	FP2SGN		; FLIP RESULT IF NEGATIVE #S
	BMI	FCMPLTSGN
FCMPGTSGN:	LDA	#$00		; GREATER THAN
	PHA
	PHA
	PHA
	LDA	#$01
	PHA
	JMP	INCNEXTOP
FCMPLT:	LDA	FP2SGN		; FLIP RESULT IF NEGATIVE #S
	BMI	FCMPGTSGN
FCMPLTSGN:	LDA	#$FF		; LESS THAN
	PHA
	PHA
	PHA
	PHA
	JMP	INCNEXTOP
F2I:	PLA
	STA	FPMAN0
	PLA
	STA	FPMAN1
	PLA
	CMP	#$80		; SET CARRY FROM MSB
	ORA	#$80		; SET HIDDEN BIT
	STA	FPMAN2
	PLA
	ROL
	STA	FPEXP
	LDA	#$00
	ROR
	STA	FPSGN
	LDA	FPEXP		; CHECK FOR LESS THAN ONE
	SEC
	SBC	#$7F
	BCS	:+
	LDA	#$00		; RETURN ZERO
	PHA
	PHA
	PHA
	PHA
	JMP	INCNEXTOP
:	CMP	#23
	BCS	F2ISHL
	STA	FPEXP
	LDA	#23
	SEC
	SBC	FPEXP
	TAX			; SHIFT MANTISSA RIGHT
	LDA	FPMAN2
F2ISHR:	LSR
	ROR	FPMAN1
	ROR	FPMAN0
	DEX
	BNE	F2ISHR
	STA	FPMAN2
	STX	FPMAN3
F2ICHKNEG:	LDA	FPSGN
	BPL	:+		; CHECK FOR NEGATIVE
	ASL			; LDA #$00; SEC
	SBC	FPMAN0
	STA	FPMAN0
	LDA	#$00
	SBC	FPMAN1
	STA	FPMAN1
	LDA	#$00
	SBC	FPMAN2
	STA	FPMAN2
	LDA	#$00
	SBC	FPMAN3
	STA	FPMAN3
:	LDA	FPMAN3
	PHA
	LDA	FPMAN2
	PHA
	LDA	FPMAN1
	PHA
	LDA	FPMAN0
	PHA
	JMP	INCNEXTOP
F2ISHL:	CMP	#32
	BCC	:+
	LDA	#$FF		; OVERFLOW, STORE MAXINT
	STA	FPMAN0
	STA	FPMAN1
	STA	FPMAN2
	LSR
	STA	FPMAN3
	BNE	F2ICHKNEG
:	SEC
	SBC	#23
	BNE	:+
	STA	FPMAN3
	BEQ	F2ICHKNEG
:	TAX			; SHIFT MANTISSA LEFT
	LDA	#$00
:	ASL	FPMAN0
	ROL	FPMAN1
	ROL	FPMAN2
	ROL
	DEX
	BNE	:-
	STA	FPMAN3
	BEQ	F2ICHKNEG
I2F:	PLA
	STA	FPMAN0
	PLA
	STA	FPMAN1
	PLA
	STA	FPMAN2
	PLA
	STA	FPMAN3
	AND	#$80
	STA	FPSGN
	BPL	:+
	LDX	#FPMAN0
	JSR	NEGINT
:	LDA	#$7F+23
	STA	FPEXP
	LDA	FPMAN3
	JMP	FPNORM
	